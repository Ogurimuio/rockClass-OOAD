<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.rockclass.mapper.SeminarMapper" >
  <resultMap id="BaseResultMap" type="com.example.rockclass.entity.Seminar" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="seminar_name" property="seminarName" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="max_team" property="maxTeam" jdbcType="TINYINT" />
    <result column="is_visible" property="isVisible" jdbcType="TINYINT" />
    <result column="seminar_serial" property="seminarSerial" jdbcType="TINYINT" />
    <result column="enroll_start_time" property="enrollStartTime" jdbcType="TIMESTAMP" />
    <result column="enroll_end_time" property="enrollEndTime" jdbcType="TIMESTAMP" />
    <association column="course_id" property="course" jdbcType="BIGINT" javaType="com.example.rockclass.entity.Course"
                 select="com.example.rockclass.mapper.CourseMapper.selectByPrimaryKey"/>
    <association column="round_id" property="round" jdbcType="BIGINT" javaType="com.example.rockclass.entity.Round"
                 select="com.example.rockclass.mapper.RoundMapper.selectByPrimaryKey"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from seminar
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.rockclass.entity.Seminar" useGeneratedKeys="true" keyProperty="id">
    insert into seminar ( course_id, round_id,
      seminar_name, introduction, max_team,
      is_visible, seminar_serial, enroll_start_time,
      enroll_end_time)
    values ( #{course.id,jdbcType=BIGINT}, #{round.id,jdbcType=BIGINT},
      #{seminarName,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, #{maxTeam,jdbcType=TINYINT},
      #{isVisible,jdbcType=TINYINT}, #{seminarSerial,jdbcType=TINYINT}, #{enrollStartTime,jdbcType=TIMESTAMP},
      #{enrollEndTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.rockclass.entity.Seminar" >
    update seminar
    set course_id = #{course.id,jdbcType=BIGINT},
      round_id = #{round.id,jdbcType=BIGINT},
      seminar_name = #{seminarName,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      max_team = #{maxTeam,jdbcType=TINYINT},
      is_visible = #{isVisible,jdbcType=TINYINT},
      seminar_serial = #{seminarSerial,jdbcType=TINYINT},
      enroll_start_time = #{enrollStartTime,jdbcType=TIMESTAMP},
      enroll_end_time = #{enrollEndTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, course_id, round_id, seminar_name, introduction, max_team, is_visible,
    seminar_serial, enroll_start_time, enroll_end_time
    from seminar
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByCourseId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, course_id, round_id, seminar_name, introduction, max_team, is_visible,
    seminar_serial, enroll_start_time, enroll_end_time
    from seminar
    where course_id = #{courseId,jdbcType=BIGINT}
  </select>

  <select id="selectSeminarByRoundId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, course_id, round_id, seminar_name, introduction, max_team, is_visible,
    seminar_serial, enroll_start_time, enroll_end_time
    from seminar
    where round_id = #{roundId,jdbcType=BIGINT}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select id, course_id, round_id, seminar_name, introduction, max_team, is_visible, 
    seminar_serial, enroll_start_time, enroll_end_time
    from seminar
  </select>
</mapper>