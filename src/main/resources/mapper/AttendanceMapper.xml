<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.rockclass.mapper.AttendanceMapper" >
  <resultMap id="BaseResultMap" type="com.example.rockclass.entity.Attendance" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="team_order" property="teamOrder" jdbcType="TINYINT" />
    <result column="is_present" property="isPresent" jdbcType="TINYINT" />
    <result column="report_name" property="reportName" jdbcType="VARCHAR" />
    <result column="report_url" property="reportUrl" jdbcType="VARCHAR" />
    <result column="ppt_name" property="pptName" jdbcType="VARCHAR" />
    <result column="ppt_url" property="pptUrl" jdbcType="VARCHAR" />
    <association column="klass_seminar_id" property="klassSeminar" jdbcType="BIGINT" javaType="com.example.rockclass.entity.KlassSeminar"
                 select="com.example.rockclass.mapper.KlassSeminarMapper.selectByPrimaryKey"/>
    <association column="team_id" property="team" jdbcType="BIGINT" javaType="com.example.rockclass.entity.Team"
                 select="com.example.rockclass.mapper.TeamMapper.selectByPrimaryKey"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from attendance
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.rockclass.entity.Attendance" useGeneratedKeys="true" keyProperty="id">
    insert into attendance (klass_seminar_id, team_id,
      team_order, is_present, report_name,
      report_url, ppt_name, ppt_url
      )
    values ( #{klassSeminar.id,jdbcType=BIGINT}, #{team.id,jdbcType=BIGINT},
      #{teamOrder,jdbcType=TINYINT}, #{isPresent,jdbcType=TINYINT}, #{reportName,jdbcType=VARCHAR},
      #{reportUrl,jdbcType=VARCHAR}, #{pptName,jdbcType=VARCHAR}, #{pptUrl,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.rockclass.entity.Attendance" >
    update attendance
    set klass_seminar_id = #{klassSeminar.id,jdbcType=BIGINT},
      team_id = #{team.id,jdbcType=BIGINT},
      team_order = #{teamOrder,jdbcType=TINYINT},
      is_present = #{isPresent,jdbcType=TINYINT},
      report_name = #{reportName,jdbcType=VARCHAR},
      report_url = #{reportUrl,jdbcType=VARCHAR},
      ppt_name = #{pptName,jdbcType=VARCHAR},
      ppt_url = #{pptUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, klass_seminar_id, team_id, team_order, is_present, report_name, report_url, 
    ppt_name, ppt_url
    from attendance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByKlassSeminarId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, klass_seminar_id, team_id, team_order, is_present, report_name, report_url,
    ppt_name, ppt_url
    from attendance
    where klass_seminar_id = #{klassSeminarId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, klass_seminar_id, team_id, team_order, is_present, report_name, report_url, 
    ppt_name, ppt_url
    from attendance
  </select>
</mapper>